image: golang:1.16.6

cache: &global_cache
  paths:
    - mod
  policy: pull

variables:
  # cache仅支持项目目录下的文件夹，因此需要在before_script拷贝mod文件夹到MOD_CACHE，在after_script中拷回来
  MOD_CACHE: ${CI_PROJECT_DIR}/.go

before_script:
  - mkdir -p mod ${MOD_CACHE} && rm -rf $MOD_CACHE && mv mod ${MOD_CACHE}
  # 提前下载依赖，否则lint阶段可能因go mod兼容问题导致下载依赖失败
  - export GO111MODULE=on && go mod tidy -v && go mod download

stages:
  - test

# 执行coverage
coverage:
  stage: test
  only:
    - dev
    - master
    - stable
  cache:
    # 继承全局cache设置
    <<: *global_cache
    # 在build阶段执行push更新cache
    policy: pull-push
  script:
    - readfile=`ls -lh|grep 'rundirfile'|awk '{print $9}'`
    - echo ${readfile}
    - localfile=`cat $readfile`
    - echo ${localfile}
    - testfile="profile.cov"
    - testGoFiles="data"
    - for p in ${localfile};do testGoFiles="$testGoFiles\|${p}";done
    - echo ${testGoFiles}
    - go test -v $(go list ./... | grep ${testGoFiles}) -coverprofile=${testfile} ./... env=ci
    - cover=$(go tool cover -func ${testfile} | tail -n 1 | awk '{print $3}' | awk '{ gsub(/%/,""); print $0 }')
    - echo ${cover}
    - profile=`ls -lh|grep ${testfile}|awk '{print $9}'`
    - echo ${profile} ${testfile}|awk '{if($1==$2){rm $profile}else{printf"no file %s\n",$2}}'
    - passLine=60.0
    - passLine=`echo ${COVERAGE_PASS_LINE} ${passLine}|awk '{if($1>$2){printf"%f",$1}else{printf"%f",$2}}'`
    - echo ${passLine}
    - echo ${cover} ${passLine}|awk '{if($1>$2){printf"current coverage rate:%f%%, require coverage rate:%f%%\n",$1,$2}else{printf"current coverage rate:%f%%, require coverage rate:%f%%\n",$1,$2; exit 1}}'

# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  schedule:
    - cron: '19 22 * * 6'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go', 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 https://git.io/JvXDl

      # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: # optional
          # Whether to download only stable versions
          stable: # optional, default is true
          # Used to pull node distributions from go-versions.  Since there's a default, this is typically not supplied by the user.
          token: # optional, default is ${{ github.token }}
